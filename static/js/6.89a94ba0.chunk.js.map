{"version":3,"sources":["assets/images/x.svg","hooks/usePrevious.ts","components/ConnectWalletButton/Option.tsx","components/Loader/index.tsx","components/ConnectWalletButton/Pending.tsx","components/ConnectWalletButton/ConnectModal.tsx","components/ConnectWalletButton/index.tsx","views/Home/Home.tsx"],"names":["_line","_line2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","ref","id","x1","y1","x2","y2","ForwardRef","usePrevious","value","useRef","useEffect","current","InfoCard","styled","button","theme","active","colors","background","backgroundAlt","primary","OptionCard","OptionCardLeft","div","OptionCardClickable","clickable","primary1","disabled","GreenCircle","success","CircleWrapper","HeaderText","color","text","SubHeader","IconWrapper","size","Option","link","onClick","header","subheader","icon","content","src","alt","href","rotate","keyframes","StyledSVG","svg","PendingSection","StyledLoader","rest","d","LoadingMessage","error","textSubtle","ErrorGroup","ErrorButton","darken","LoadingWrapper","PendingView","connector","setPendingError","tryActivation","isMetamask","window","ethereum","isMetaMask","SUPPORTED_WALLETS","map","option","injected","name","description","iconURL","CloseIcon","CloseColor","Close","Wrapper","HeaderRow","ContentWrapper","UpperSection","OptionGrid","HoverText","WALLET_VIEWS","defaultOnDismiss","WalletModal","onDismiss","useWeb3React","account","activate","useState","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","tryDeactivate","_connector","a","localStorage","removeItem","WalletConnectConnector","walletConnectProvider","wc","uri","getItem","walletconnect","close","e","console","log","setupNetwork","undefined","then","catch","err","UnsupportedChainIdError","getOptions","isMobile","mobile","web3","MetamaskIcon","mobileOnly","Btn","ConnectWalletButton","useModal","onPresentConnectModal","label","digits","BigNumber","from","pow","Home","videoPlayed","setVideoPlayed","tokenContract","useContract","TokenAbi","limit","setLimit","resetTime","setResetTime","randomNumber","setRandomNumber","fetchData","methods","antiChadLimit","sellLimit","sellTime","Number","Date","formattedSellLimit","toNumber","toLocaleString","maximumFractionDigits","style","padding","display","flexDirection","date","onMount","completed","Math","random","onComplete","renderer","renderCounter","InfoText","fontSize","mt","days","hours","minutes","seconds"],"mappings":"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","file":"static/js/6.89a94ba0.chunk.js","sourcesContent":["var _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.33076876.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\n\n// modified from https://usehooks.com/usePrevious/\nexport default function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst InfoCard = styled.button<{ active?: boolean }>`\n  background-color: ${({ theme, active }) => (active ? theme.colors.background : theme.colors.backgroundAlt)};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.colors.primary};\n  }\n  border-color: ${({ theme, active }) => (active ? 'transparent' : theme.colors.background)};\n`\n\nconst OptionCard = styled(InfoCard as any)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\n\nconst OptionCardLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n`\n\nconst OptionCardClickable = styled(OptionCard as any)<{ clickable?: boolean }>`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n    border: ${({ clickable, theme }) => (clickable ? `1px solid ${theme.primary1}` : ``)};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\n\nconst GreenCircle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({ theme }) => theme.colors.success};\n    border-radius: 50%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.success};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  display: flex;\n  flex-direction: row;\n  color: ${(props) =>\n    props.color === 'blue' ? ({ theme }) => theme.colors.primary : ({ theme }) => theme.colors.text};\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst SubHeader = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-top: 10px;\n  font-size: 12px;\n`\n\nconst IconWrapper = styled.div<{ size?: number | null }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? `${size}px` : '24px')};\n    width: ${({ size }) => (size ? `${size}px` : '24px')};\n  }\n`\n\nexport default function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id,\n}: {\n  link?: string | null\n  clickable?: boolean\n  size?: number | null\n  onClick?: null | (() => void)\n  color: string\n  header: React.ReactNode\n  subheader: React.ReactNode | null\n  icon: string\n  active?: boolean\n  id: string\n}) {\n  const content = (\n    <OptionCardClickable id={id} onClick={onClick} clickable={clickable && !active} active={active}>\n      <OptionCardLeft>\n        <HeaderText color={color}>\n          {active ? (\n            <CircleWrapper>\n              <GreenCircle>\n                <div />\n              </GreenCircle>\n            </CircleWrapper>\n          ) : (\n            ''\n          )}\n          {header}\n        </HeaderText>\n        {subheader && <SubHeader>{subheader}</SubHeader>}\n      </OptionCardLeft>\n      <IconWrapper size={size}>\n        <img src={icon} alt=\"Icon\" />\n      </IconWrapper>\n    </OptionCardClickable>\n  )\n  if (link) {\n    return <a href={link}>{content}</a>\n  }\n\n  return content\n}\n","import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React from 'react'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport styled from 'styled-components/macro'\nimport { SUPPORTED_WALLETS } from 'utils/wallet'\nimport { darken } from 'polished'\nimport { injected } from 'utils/connectors'\nimport Option from './Option'\n\nimport Loader from '../Loader'\n\nconst PendingSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\n\nconst StyledLoader = styled(Loader)`\n  margin-right: 1rem;\n`\n\nconst LoadingMessage = styled.div<{ error?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? 'red' : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? 'red' : theme.colors.textSubtle)};\n\n  & > * {\n    padding: 1rem;\n  }\n`\n\nconst ErrorGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.background};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.colors.textSubtle)};\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default function PendingView({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation,\n}: {\n  connector?: AbstractConnector\n  error?: boolean\n  setPendingError: (error: boolean) => void\n  tryActivation: (connector: AbstractConnector) => void\n}) {\n  // @ts-ignore\n  const isMetamask = window?.ethereum?.isMetaMask\n  return (\n    <PendingSection>\n      <LoadingMessage error={error}>\n        <LoadingWrapper>\n          {error ? (\n            <ErrorGroup>\n              <div>\n                <text>Error connecting</text>\n              </div>\n              <ErrorButton\n                onClick={() => {\n                  setPendingError(false)\n                  if (connector) {\n                    tryActivation(connector)\n                  }\n                }}\n              >\n                <text>Try Again</text>\n              </ErrorButton>\n            </ErrorGroup>\n          ) : (\n            <>\n              <StyledLoader />\n              <text>Initializing...</text>\n            </>\n          )}\n        </LoadingWrapper>\n      </LoadingMessage>\n      {Object.keys(SUPPORTED_WALLETS).map((key) => {\n        const option = SUPPORTED_WALLETS[key]\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== 'MetaMask') {\n              return null\n            }\n            if (!isMetamask && option.name === 'MetaMask') {\n              return null\n            }\n          }\n          return (\n            <Option\n              id={`connect-${key}`}\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={option.iconURL}\n            />\n          )\n        }\n        return null\n      })}\n    </PendingSection>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { isMobile } from 'react-device-detect'\nimport styled from 'styled-components/macro'\nimport MetamaskIcon from 'assets/images/metamask.png'\nimport { ReactComponent as Close } from 'assets/images/x.svg'\nimport { injected } from 'utils/connectors'\nimport { setupNetwork, SUPPORTED_WALLETS } from 'utils/wallet'\nimport usePrevious from 'hooks/usePrevious'\nimport { Modal } from '@pancakeswap-libs/uikit'\n// import Modal from './Modal'\nimport Option from './Option'\nimport PendingView from './Pending'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)``\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.colors.primary : 'inherit')};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nconst defaultOnDismiss = () => null\n\nexport default function WalletModal({ onDismiss = defaultOnDismiss }: { onDismiss?: () => null }) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const previousAccount = usePrevious(account)\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n\n  const tryDeactivate = async (_connector: AbstractConnector | undefined) => {\n    if (!_connector){\n      return \n    }\n    try {\n      window.localStorage.removeItem('walletconnect')\n      window.localStorage.removeItem('wallet')\n      window.localStorage.removeItem('-walletlink:https://www.walletlink.org:walletUsername')\n      window.localStorage.removeItem('-walletlink:https://www.walletlink.org:session:id')\n      window.localStorage.removeItem(\"-walletlink:https://www.walletlink.org:Addresses\")\n      window.localStorage.removeItem(\"-walletlink:https://www.walletlink.org:secret\")\n      window.localStorage.removeItem(\"-walletlink:https://www.walletlink.org:linked\")\n      \n      if (\n        (_connector instanceof WalletConnectConnector && _connector.walletConnectProvider?.wc?.uri) ||\n        window.localStorage.getItem('walletconnect')\n      ) {\n        // @ts-ignore\n        _connector.walletconnect.close()\n        // @ts-ignore\n        // _connector.walletconnect.walletConnectProvider = null\n      }\n    } catch (e) {\n      console.log('tryDisconnect error', e)\n    }\n  }\n\n  const tryActivation = async (_connector: AbstractConnector | undefined) => {\n    setPendingWallet(_connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n    tryDeactivate(_connector)\n\n    await setupNetwork()\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (_connector instanceof WalletConnectConnector && _connector.walletConnectProvider?.wc?.uri) {\n      // _connector.walletConnectProvider = undefined\n    }\n    return (\n      _connector &&\n      activate(_connector, undefined, true)\n        .then(() => {\n          onDismiss()\n        })\n        .catch((err) => {\n          if (err instanceof UnsupportedChainIdError) {\n            activate(_connector) // a little janky...can't use setError because the connector isn't set\n          } else {\n            setPendingError(true)\n          }\n        })\n    )\n  }\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    // @ts-ignore\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        // disable portis on mobile for now\n\n        if (option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                if (option.connector !== connector && !option.href) {\n                  tryActivation(option.connector)\n                }\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={option.iconURL}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        // @ts-ignore\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color=\"#E8831D\"\n                header={<text>Install Metamask</text>}\n                subheader={null}\n                link=\"https://metamask.io/\"\n                icon={MetamaskIcon}\n              />\n            )\n          }\n          return null // dont want to return install twice\n        }\n        // don't return metamask if injected provider isn't metamask\n        if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              if (option.connector === connector) {\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              } else if (!option.href) {\n                tryActivation(option.connector)\n              }\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} // use option.descriptio to bring back multi-line\n            icon={option.iconURL}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={onDismiss}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            {error instanceof UnsupportedChainIdError ? <text>Wrong Network</text> : <text>Error connecting</text>}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>\n                <text>Please connect to the appropriate Ethereum network.</text>\n              </h5>\n            ) : (\n              <text>Error connecting. Try refreshing the page.</text>\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={onDismiss}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>\n              Connect to a wallet\n            </HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal title=\"Connect Wallet\" onDismiss={onDismiss}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n","// @ts-nocheck\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, ButtonProps, useModal, useWalletModal } from \"@pancakeswap-libs/uikit\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useAuth from \"../../hooks/useAuth\";\nimport ConnectModal from './ConnectModal'\n\nconst Btn = styled.button`\nuser-select: none;\n  background: #040E18;\n  border-radius: 70px;\n  border: 2px solid transparent;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 700;\n  letter-spacing: .5px;\n  line-height: 1;\n  margin-bottom: 0;\n  padding: 20px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  touch-action: manipulation;\n  transition: all 0.4s 0s;\n  vertical-align: middle;\n  white-space: nowrap;\n  box-shadow: 0px 6px 22px rgba(6, 34, 51, 0.22);\n  background-clip: padding-box;\n  position: relative;\n  font-size: 14px;\n\n  &:after  {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    margin: -2px;\n    background: linear-gradient(90deg, rgba(0, 196, 244, 1) 0%, rgba(4, 12, 21, 1) 49%, rgba(0, 196, 244, 1) 100%);\n    border-radius: 70px;\n    transition: all 0.4s ease 0s;\n    z-index: -1;\n  }\n\n  &:hover {\n    border-color: #00C4F4;\n    color: #00C4F4;\n  }\n`;\n\n\nconst ConnectWalletButton: React.FC<ButtonProps & { label?: string }> = (props) => {\n  const { account } = useWeb3React();\n  const [onPresentConnectModal] = useModal(\n    <ConnectModal\n    />\n  )\n  const { label } = props;\n\n  return (\n    \n    <Btn onClick={onPresentConnectModal} {...props}>\n      {account ? \"Connected\" : label ?? \"Connect Wallet to Proceed\"}\n    </Btn>\n  );\n};\n\nexport default ConnectWalletButton;\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useContract } from \"hooks/useContract\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { BigNumber } from \"ethers\";\r\nimport { Text } from \"@pancakeswap-libs/uikit\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nimport TokenAbi from \"./abi.json\";\r\n\r\n\r\nconst digits = BigNumber.from(10).pow(18);\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Home = ({ videoPlayed, setVideoPlayed }) => {\r\n  const { account } = useWeb3React();\r\n  const tokenContract = useContract(\r\n    TokenAbi,\r\n    \"0xB6eDa0f4610D2dD5Dda021245F9ACa697Cb17858\",\r\n  );\r\n  // @ts-ignore\r\n  const [limit, setLimit] = useState(\"0\");\r\n  const [resetTime, setResetTime] = useState(0);\r\n  const [randomNumber, setRandomNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // if account, See if already claimed\r\n      if (account) {\r\n        // these return strings\r\n        const sellLimit = await tokenContract.methods\r\n          .antiChadLimit(account)\r\n          .call();\r\n        const sellTime = await tokenContract.methods.sellTime(account).call();\r\n        setLimit(sellLimit);\r\n        setResetTime(Number(sellTime) * 1000 + 86400000);\r\n        console.log(\"sellLimit\", sellLimit, typeof sellLimit);\r\n        console.log(\"sellTime\", sellTime, Number(new Date()));\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [account, tokenContract, randomNumber]);\r\n\r\n  // @ts-ignore\r\n  const formattedSellLimit = BigNumber.from(limit)\r\n    .div(digits)\r\n    .toNumber()\r\n    .toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\r\n\r\n    console.log('Number(new Date()) < resetTime', Number(new Date()), resetTime, Number(new Date()) < resetTime)\r\n\r\n  return (\r\n    <Wrapper\r\n      id=\"swap-page\"\r\n      style={{ padding: 5, display: \"flex\", flexDirection: \"column\" }}\r\n    >\r\n      {account ? (\r\n        <>\r\n          <Text>Your Current Sell Limit: {formattedSellLimit}</Text>\r\n          <br/>\r\n          {\r\n            Number(new Date()) < resetTime && \r\n            <Countdown\r\n              date={resetTime}\r\n              onMount={({ completed }) => {\r\n                if (completed) {\r\n                  setRandomNumber(Math.random());\r\n                }\r\n              }}\r\n              onComplete={() => setRandomNumber(Math.random())}\r\n              // @ts-ignore\r\n              renderer={renderCounter}\r\n            />\r\n          }\r\n          <br/>\r\n          <InfoText style={{fontSize:12}}>\r\n            * limits are dynamic and determined as a percentage of available liquidity\r\n          </InfoText>\r\n        </>\r\n      ) : (\r\n        <ConnectWalletButton mt=\"8px\" width=\"100%\" />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\nconst InfoText = styled.div`\r\ncolor: white;\r\nfont-size: 14px;\r\n`\r\n\r\nconst renderCounter = (\r\n  { days, hours, minutes, seconds, completed }: any\r\n) => {\r\n  if (completed) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <InfoText>\r\n      <br/>\r\n      Your sell limit expires in: {days}d {hours}h {minutes}m {seconds}s\r\n    </InfoText>\r\n  );\r\n};\r\n"],"sourceRoot":""}